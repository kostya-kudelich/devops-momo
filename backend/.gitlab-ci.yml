variables:
  SAST_EXCLUDED_ANALYZERS: "gosec"

include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
  - template: Security/SAST.gitlab-ci.yml

stages:
  - build
  - test
  - upload
  - deploy

build:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/momo-backend:$VERSION
      .
    - docker push $CI_REGISTRY_IMAGE/momo-backend:$VERSION
  rules:
    - changes:
      - backend/**/*


sonarqube-backend-sast:
  stage: test
  rules:
    - changes:
      - backend/**/*
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd backend
    - >
      sonar-scanner 
      -Dsonar.projectKey=${SONAR_PROJECT_KEY_BACKEND}
      -Dsonar.sources=.
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONAR_LOGIN}
      
unit-tests:
  stage: test
  rules:
    - changes:
      - backend/**/*
  image: gitlab.praktikum-services.ru:5050/k.kudelich/momo-store/golang:1.20.0-alpine
  script:
    - cd backend
    - go test -v ./...    

upload:
  variables:
    GIT_STRATEGY: none
  image: docker:20.10.12-dind-rootless
  stage: upload
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/momo-backend:$VERSION
    - docker tag $CI_REGISTRY_IMAGE/momo-backend:$VERSION $CI_REGISTRY_IMAGE/momo-backend:latest
    - docker push $CI_REGISTRY_IMAGE/momo-backend --all-tags
  rules:
    - changes:
      - backend/**/*
    